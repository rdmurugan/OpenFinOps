[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "openfinops"
version = "0.1.1"
description = "Open Source FinOps Platform for AI/ML Cost Observability and Optimization"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "OpenFinOps Contributors", email = "durai@infinidatum.net"},
]
maintainers = [
    {name = "OpenFinOps Contributors", email = "durai@infinidatum.net"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: System :: Monitoring",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Visualization",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = [
    "finops", "cost-optimization", "observability", "ai-ml",
    "cloud-cost", "aws", "azure", "gcp", "openai", "anthropic",
    "llm-monitoring", "rag-monitoring", "cost-attribution",
    "visualization", "dashboard", "telemetry", "multi-cloud"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "tornado>=6.0.0",
    "flask>=2.0.0",
    "requests>=2.28.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
# Cloud provider integrations
aws = [
    "boto3>=1.26.0",
]
azure = [
    "azure-monitor-query>=1.1.0",
    "azure-identity>=1.12.0",
]
gcp = [
    "google-cloud-monitoring>=2.11.0",
]

# AI platform integrations
openai = [
    "openai>=1.0.0",
]
anthropic = [
    "anthropic>=0.8.0",
]

# Database support
postgres = [
    "psycopg2-binary>=2.9.0",
]
mongodb = [
    "pymongo>=4.3.0",
]

# Development and testing
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

# Complete package with all features
all = [
    "boto3>=1.26.0",
    "azure-monitor-query>=1.1.0",
    "azure-identity>=1.12.0",
    "google-cloud-monitoring>=2.11.0",
    "openai>=1.0.0",
    "anthropic>=0.8.0",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.3.0",
]

[project.urls]
Homepage = "https://github.com/openfinops/openfinops"
Documentation = "https://openfinops.readthedocs.io/"
Repository = "https://github.com/openfinops/openfinops"
"Bug Tracker" = "https://github.com/openfinops/openfinops/issues"

[project.scripts]
openfinops = "openfinops.cli:main"
openfinops-server = "openfinops.cli:server_command"
openfinops-dashboard = "openfinops.cli:dashboard_command"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
openfinops = [
    "templates/*.html",
    "static/*.js",
    "static/*.css",
    "config/*.yaml",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=html --cov-report=term"
